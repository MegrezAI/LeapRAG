services:
  es01:
    container_name: es01
    profiles:
      - elasticsearch
    image: elasticsearch:${STACK_VERSION}
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=es01
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=false
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - cluster.routing.allocation.disk.watermark.low=5gb
      - cluster.routing.allocation.disk.watermark.high=3gb
      - cluster.routing.allocation.disk.watermark.flood_stage=2gb
      - TZ=${TIMEZONE}
      - ES_HOST=${ES_HOST:-localhost}
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ['CMD-SHELL', 'curl http://localhost:9200']
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - leapai_network
    restart: on-failure
  minio:
    image: quay.io/minio/minio:RELEASE.2023-12-20T01-00-02Z
    container_name: minio
    command: server --console-address ":9001" /data
    ports:
      - ${MINIO_PORT}:9000
      - ${MINIO_CONSOLE_PORT}:9001
    env_file: .env
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
      - TZ=${TIMEZONE}
      - MINIO_HOST=${MINIO_HOST:-localhost}
    volumes:
      - minio_data:/data
    networks:
      - leapai_network
    healthcheck:
      test: ['CMD', '/usr/bin/mc', 'ready', 'local']
      interval: 10s
      timeout: 10s
      retries: 3
    restart: on-failure

  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      PGDATA: /data/postgres
      PGUSER: ${POSTGRES_USER}
      PGDATABASE: ${POSTGRES_DB}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST:-localhost}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - pg_data:/data/postgres
    ports:
      - '${POSTGRES_PORT}:5432'
    env_file: .env
    networks:
      - leapai_network

  redis:
    image: valkey/valkey:8
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 128mb --maxmemory-policy allkeys-lru
    ports:
      - ${REDIS_PORT}:6379
    env_file: .env
    volumes:
      - redis_data:/data
    networks:
      - leapai_network
    environment:
      - REDIS_HOST=${REDIS_HOST:-localhost}
    healthcheck:
      test:
        [
          'CMD',
          'redis-cli',
          '-h',
          'localhost',
          '-p',
          '6379',
          '-a',
          '${REDIS_PASSWORD}',
          'ping',
        ]
      interval: 10s
      timeout: 10s
      retries: 3
    restart: on-failure

volumes:
  es_data:
    driver: local
  infinity_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local
  pg_data:
    driver: local

networks:
  leapai_network:
    driver: bridge
